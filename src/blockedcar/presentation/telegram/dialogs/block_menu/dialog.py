from aiogram.types import ContentType, Message
from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.input import MessageInput
from aiogram_dialog.widgets.kbd import (
    Button,
    Calendar,
    Column,
    Counter,
    Group,
    Next,
    Row,
)
from aiogram_dialog.widgets.text import Const, Format

from .getters import write_data_getter
from .handlers import (
    add_comment_handler,
    add_departure_time_handler,
    add_licence_plate_handler,
    add_photo_handler,
    on_finish,
    on_rewrite,
    on_select_date,
)
from .states import BlockMenu


def block_menu() -> Dialog:
    return Dialog(
        Window(
            Const(
                "<b>üöó –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ –º–∞—à–∏–Ω</b>, –∫–æ—Ç–æ—Ä—ã–µ <b>–ø–µ—Ä–µ–∫—Ä—ã–ª–∏:</b>\n\n"
                "<b>–ü—Ä–∏–º–µ—Ä: </b> <code>–ê123–ê–ê45, –ë678–ë–ë91</code>"
            ),
            MessageInput(add_licence_plate_handler, content_types=[ContentType.TEXT]),
            parse_mode="HTML",
            state=BlockMenu.LICENSE_PLATE,
        ),
        Window(
            Const("<b>üóìÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É</b> —Å–≤–æ–µ–≥–æ <b>–æ—Ç–¥—ä–µ–∑–¥–∞:</b>"),
            Calendar(id="calendar", on_click=on_select_date),
            parse_mode="HTML",
            state=BlockMenu.DEPARTURE_DATE,
        ),
        Window(
            Const(
                "<b>üïì –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è</b> –ø–ª–∞–Ω–∏—Ä—É–µ–º–æ–≥–æ <b>–≤—ã–µ–∑–¥–∞:</b>\n\n"
                "<b>–ü—Ä–∏–º–µ—Ä: </b> <code>8:15</code>"
            ),
            MessageInput(add_departure_time_handler, content_types=[ContentType.TEXT]),
            parse_mode="HTML",
            state=BlockMenu.DEPARTURE_TIME,
        ),
        Window(
            Const("<b>üí¨ –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b>"),
            Next(Const("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"), id="next_to_photo"),
            MessageInput(add_comment_handler, content_types=[ContentType.TEXT]),
            parse_mode="HTML",
            state=BlockMenu.COMMENT,
        ),
        # todo: –ö–Ω–æ–ø–∫–∞: –î–æ—Å–∫–∞
        Window(
            Const(
                "<b>üìé –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ:</b>\n\n"
                "<b>–ú–æ–∂–Ω–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å</b> —Ç–æ–ª—å–∫–æ <b>–æ–¥–Ω–æ</b> —Ñ–æ—Ç–æ"
            ),
            Next(Const("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"), id="next_to_check"),
            MessageInput(add_photo_handler, content_types=[ContentType.PHOTO]),
            parse_mode="HTML",
            state=BlockMenu.PHOTO,
        ),
        Window(
            Const("<b>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å</b> –≤–≤–µ–¥–µ–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:\n"),
            Format(
                "<b>–ü–µ—Ä–µ–∫—Ä—ã—Ç—ã–µ –º–∞—à–∏–Ω—ã: </b><code>{license_plate}</code>\n"
                "<b>–î–∞—Ç–∞ –æ—Ç—ä–µ–∑–¥–∞: </b><code>{departure_date}</code>\n"
                "<b>–í—Ä–µ–º—è –æ—Ç—ä–µ–∑–¥–∞: </b><code>{departure_time}</code>\n"
                "<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: </b><code>{comment}</code>\n"
                "<b>–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ: </b><code>(1)</code>\n\n"
            ),
            Const("–í–µ—Ä–Ω—ã –ª–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ?"),
            Row(
                Button(Const("–î–∞"), id="yes", on_click=on_finish),
                Button(Const("–ù–µ—Ç"), id="no", on_click=on_rewrite),
            ),
            state=BlockMenu.CHECK,
            parse_mode="HTML",
            getter=write_data_getter,
        ),
    )
